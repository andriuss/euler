package com.wix.euler

import org.specs2.mutable.Specification

class Problem2Test extends Specification {
/*
Even Fibonacci numbers
Problem 2

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

  def solve(max: Int): Int = {
    var index = 1
    var value = 0
    var sum = 0
    while (value < max) {
      value = fib(index)
      index += 1
      if (value % 2 == 0) sum += value
    }
    sum
  }

  def fib(n: Int): Int = n match {
    case 1 => 1
    case 2 => 2
    case _ => fib(n - 2) + fib(n - 1)
  }

  "solve" should {
    "return 10 " in {
      solve(max = 12) must_== 10
    }
    "return 10 " in {
      solve(max = 400000000) must_== 4613732
    }
  }
}